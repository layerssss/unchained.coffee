// Generated by CoffeeScript 1.6.3
(function() {
  var unchained;

  this.unchained = unchained = function(entry, commands, path) {
    var args, func, isMutator, k, result, v;
    if (path == null) {
      path = String(entry);
    }
    result = entry;
    for (k in commands) {
      v = commands[k];
      isMutator = k.match(/^_+([^_].*)$/);
      if (isMutator) {
        k = isMutator[1];
      }
      func = entry[k];
      if ((func != null ? func.constructor : void 0) !== Function) {
        throw new Error("'" + k + "' is not available in " + path);
      }
      if (isMutator) {
        args = unchained._extractArgs(v);
        result = unchained(func.apply(entry, args), v, "" + path + "." + k);
      } else {
        args = unchained._extractArgs(v);
        if (args.length) {
          result = func.apply(entry, args);
        } else {
          result = func.call(entry, v);
        }
      }
    }
    return result;
  };

  unchained._extractArgs = function(commands, prefix) {
    var args, k;
    if (prefix == null) {
      prefix = '';
    }
    if (prefix === '') {
      args = unchained._extractArgs(commands, '_');
      if (args.length) {
        return args;
      }
      return unchained._extractArgs(commands, '__');
    }
    args = [];
    if (!(commands && typeof commands === 'object')) {
      return args;
    }
    while (-1 !== Object.keys(commands).indexOf(k = "" + prefix + (String(args.length)))) {
      args.push(commands[k]);
      delete commands[k];
    }
    return args;
  };

}).call(this);
